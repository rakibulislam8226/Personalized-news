# Generated by Django 5.2.1 on 2025-05-27 10:06

import apps.authio.utils
import autoslug.fields
import dirtyfields.dirtyfields
import django.contrib.auth.validators
import django.contrib.postgres.fields
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "uid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False, populate_from="email", unique=True
                    ),
                ),
                (
                    "countries",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("ae", "United Arab Emirates"),
                                ("ar", "Argentina"),
                                ("at", "Austria"),
                                ("au", "Australia"),
                                ("be", "Belgium"),
                                ("bg", "Bulgaria"),
                                ("br", "Brazil"),
                                ("ca", "Canada"),
                                ("ch", "Switzerland"),
                                ("cn", "China"),
                                ("co", "Colombia"),
                                ("cu", "Cuba"),
                                ("cz", "Czech Republic"),
                                ("de", "Germany"),
                                ("eg", "Egypt"),
                                ("fr", "France"),
                                ("gb", "United Kingdom"),
                                ("gr", "Greece"),
                                ("hk", "Hong Kong"),
                                ("hu", "Hungary"),
                                ("id", "Indonesia"),
                                ("ie", "Ireland"),
                                ("il", "Israel"),
                                ("in", "India"),
                                ("it", "Italy"),
                                ("jp", "Japan"),
                                ("kr", "South Korea"),
                                ("lt", "Lithuania"),
                                ("lv", "Latvia"),
                                ("ma", "Morocco"),
                                ("mx", "Mexico"),
                                ("my", "Malaysia"),
                                ("ng", "Nigeria"),
                                ("nl", "Netherlands"),
                                ("no", "Norway"),
                                ("nz", "New Zealand"),
                                ("ph", "Philippines"),
                                ("pl", "Poland"),
                                ("pt", "Portugal"),
                                ("ro", "Romania"),
                                ("rs", "Serbia"),
                                ("ru", "Russia"),
                                ("sa", "Saudi Arabia"),
                                ("se", "Sweden"),
                                ("sg", "Singapore"),
                                ("si", "Slovenia"),
                                ("sk", "Slovakia"),
                                ("th", "Thailand"),
                                ("tr", "Turkey"),
                                ("tw", "Taiwan"),
                                ("ua", "Ukraine"),
                                ("us", "United States"),
                                ("ve", "Venezuela"),
                                ("za", "South Africa"),
                            ],
                            max_length=2,
                        ),
                        default=apps.authio.utils.default_countries,
                        help_text="Preferred countries (ISO country codes)",
                        size=None,
                    ),
                ),
                (
                    "sources",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100),
                        default=apps.authio.utils.default_sources,
                        help_text="Preferred news sources",
                        size=None,
                    ),
                ),
                (
                    "keywords",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100),
                        default=apps.authio.utils.default_keywords,
                        help_text="Search keywords for personalizing news",
                        size=None,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "ordering": ("-date_joined",),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
    ]
